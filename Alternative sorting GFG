Given an array arr of distinct integers. Rearrange the array in such a way that the first element is the largest and the second element is the smallest, the third element is the second largest and the fourth element is the second smallest, and so on.

Examples:

Input: arr[] = [7, 1, 2, 3, 4, 5, 6]
Output: [7, 1, 6, 2, 5, 3, 4]
Explanation: The first element is first maximum and second element is first minimum and so on.
Input: arr[] = [1, 6, 9, 4, 3, 7, 8, 2]
Output: [9, 1, 8, 2, 7, 3, 6, 4]
Explanation: The first element is first maximum and second element is first minimum and so on.


import java.util.Arrays;

public class RearrangeArray {
    public static int[] rearrangeArray(int[] arr) {
        Arrays.sort(arr);  // Sort the array in ascending order
        int n = arr.length;
        int[] result = new int[n];
        
        int left = 0;       // Pointer for the smallest elements
        int right = n - 1;  // Pointer for the largest elements
        
        for (int i = 0; i < n; i++) {
            if (i % 2 == 0) {
                result[i] = arr[right--];  // Pick the largest remaining element for even indices
            } else {
                result[i] = arr[left++];   // Pick the smallest remaining element for odd indices
            }
        }
        
        return result;
    }

    public static void main(String[] args) {
        int[] arr1 = {7, 1, 2, 3, 4, 5, 6};
        System.out.println(Arrays.toString(rearrangeArray(arr1)));  // Output: [7, 1, 6, 2, 5, 3, 4]

        int[] arr2 = {1, 6, 9, 4, 3, 7, 8, 2};
        System.out.println(Arrays.toString(rearrangeArray(arr2)));  // Output: [9, 1, 8, 2, 7, 3, 6, 4]
    }
}


   

